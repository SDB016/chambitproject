package com.example.chambitproject;

import android.util.Log;

public class StationInfo {
    private String[] station_list = {"가능", "가락시장", "가산디지털단지", "가양", "가재울", "가정", "가정중앙시장", "가좌", "가천대", "가평", "간석", "간석오거리", "갈매", "갈산", "강남", "강남구청", "강남대", "강동", "강동구청", "강매", "강변", "강촌", "개롱", "개봉", "개포동", "개화", "개화산", "거여", "건대입구", "검단사거리", "검단오류", "검바위", "검암", "경기광주", "경기도청북부청사", "경마공원", "경복궁", "경인교대입구", "경전철의정부", "경찰병원", "계산", "계양", "고덕", "고려대", "고속터미널", "고잔", "고진", "곡산", "곤제", "곤지암", "공덕", "공릉", "공항시장", "공항화물청사", "과천", "관악", "광교", "광교중앙", "광나루", "광명", "광명사거리", "성북", "광화문", "광흥창", "교대", "구로", "구로디지털단지", "구룡", "구리", "구반포", "구산", "구성", "구의", "구일", "구파발", "국수", "국제업무지구", "국회의사당", "군자", "군포", "굴봉산", "굴포천", "굽은다리", "귤현", "금곡", "금릉", "금정", "금천구청", "금촌", "금호", "기흥", "길동", "길음", "김량장", "김유정", "김포공항", "까치산", "까치울", "낙성대", "남구로", "남동구청", "남동인더스파크", "남부터미널", "남성", "남영", "남춘천", "남태령", "남한산성입구", "내방", "노들", "노량진", "노원", "녹번", "녹사평", "녹양", "녹천", "논현", "능곡", "단대오거리", "달월", "답십리", "당고개", "당산", "당정", "대곡", "대공원", "대림", "대모산입구", "대방", "대성리", "대야미", "대청", "대치", "대화", "대흥", "덕계", "덕소", "덕정", "도곡", "도농", "도림천", "도봉", "도봉산", "도심", "도원", "도화", "독립문", "독바위", "독산", "독정", "돌곶이", "동대문", "동대문역사문화공원", "동대입구", "동두천", "동두천중앙", "동막", "동묘앞", "동백", "동수", "동암", "동오", "동인천", "동작", "동천", "동춘", "두정", "둔전", "둔촌동", "등촌", "디지털미디어시티", "뚝섬", "뚝섬유원지", "마곡", "마곡나루", "마두", "마들", "마석", "마장", "마전", "마천", "마포", "마포구청", "만수", "망우", "망원", "망월사", "망포", "매교", "매봉", "매탄권선", "먹골", "면목", "명동", "명일", "명지대", "명학", "모란", "모래내시장", "목동", "몽촌토성", "무악재", "문래", "문산", "문정", "문학경기장", "미금", "미아", "미아사거리", "박촌", "반월", "반포", "발곡", "발산", "방배", "방이", "방학", "방화", "배방", "백마", "백석", "백양리", "백운", "버티고개", "범계", "범골", "별내", "병점", "보라매", "보문", "보산", "보정", "보평", "복정", "봉명", "봉은사", "봉천", "봉화산", "부개", "부발", "부천", "부천시청", "부천종합운동장", "부평", "부평구청", "부평삼거리", "부평시장", "불광", "사가정", "사당", "사릉", "사평", "산본", "산성", "삼가", "삼각지", "삼동", "삼산체육관", "삼성", "삼성중앙", "삼송", "상갈", "상계", "상도", "상동", "상록수", "상봉", "상수", "상왕십리", "상월곡", "상일동", "상천", "상현", "새말", "새절", "샛강", "서강대", "서구청", "서대문", "서동탄", "서부여성회관", "서빙고", "서울", "서울(경의중앙선)", "서울대입구", "서울숲", "서정리", "서초", "서현", "석계", "석남", "석바위시장", "석수", "석천사거리", "석촌", "선릉", "선바위", "선유도", "선정릉", "선학", "성균관대", "성복", "성수", "성신여대입구", "성환", "세류", "세마", "세종대왕릉", "센트럴파크", "소래포구", "소사", "소요산", "송내", "송도", "송산", "송정", "송탄", "송파", "수내", "수락산", "수리산", "수색", "수서", "수원", "수원시청", "수유", "수지구청", "수진", "숙대입구", "숭실대입구", "숭의", "시민공원", "시청", "시청용인대", "신갈", "신금호", "신길", "신길온천", "신내", "신논현", "신답", "신당", "신대방", "신대방삼거리", "신도림", "신둔도예촌", "신림", "신목동", "신반포", "신방화", "신사", "신설동", "신연수", "신용산", "신원", "신이문", "신정", "신정네거리", "신중동", "신창", "신촌", "신촌(경의중앙선)", "신포", "신풍", "신흥", "쌍문", "쌍용(나사렛대)", "아산", "아시아드경기장", "아신", "아차산", "아현", "안국", "안산", "안암", "안양", "암사", "압구정", "압구정로데오", "애오개", "야당", "야탑", "약수", "양수", "양원", "양재", "양재시민의숲", "양정", "양주", "양천구청", "양천향교", "양평", "양평(경의중앙선)", "어룡", "어린이대공원", "어정", "언주", "여의나루", "여의도", "역곡", "역삼", "역촌", "연수", "연신내", "염창", "영등포", "영등포구청", "영등포시장", "영종", "영통", "예술회관", "오금", "오류동", "오리", "오목교", "오빈", "오산", "오산대", "오이도", "옥수", "온수", "온양온천", "올림픽공원", "완정", "왕길", "왕십리", "외대앞", "용답", "용두", "용마산", "용문", "용산", "우장산", "운길산", "운동장송담대", "운서", "운연", "운정", "원당", "원덕", "원인재", "원흥", "월계", "월곡", "월곶", "월드컵경기장", "월롱", "을지로3가", "을지로4가", "을지로입구", "응봉", "응암", "의왕", "의정부", "의정부시청", "의정부중앙", "이대", "이매", "이천", "이촌", "이태원", "인덕원", "인천", "인천가좌", "인천국제공항", "인천논현", "인천대공원", "인천대입구", "인천시청", "인천터미널", "인하대", "일산", "일원", "임학", "작전", "잠실", "잠실나루", "잠실새내", "잠원", "장승배기", "장암", "장지", "장한평", "전대에버랜드", "정발산", "정부과천청사", "정왕", "정자", "제기동", "제물포", "종각", "종로3가", "종로5가", "종합운동장", "주안", "주안국가산단", "주엽", "죽전", "중계", "중곡", "중동", "중랑", "중앙", "중화", "증미", "증산", "지석", "지식정보단지", "지제", "지축", "지행", "직산", "진위", "창동", "창신", "천마산", "천안", "천왕", "천호", "철산", "청계산입구", "청구", "청담", "청라국제도시", "청량리", "청명", "청평", "초당", "초월", "초지", "총신대입구(이수)", "춘의", "춘천", "충무로", "충정로", "캠퍼스타운", "탄현", "탑석", "태릉입구", "태평", "테크노파크", "퇴계원", "파주", "판교", "팔당", "평내호평", "평촌", "평택", "풍산", "하계", "학동", "학여울", "한강진", "한남", "한대앞", "한성대입구", "한양대", "한티", "합정", "행당", "행신", "혜화", "호구포", "홍대입구", "홍제", "화곡", "화랑대", "화서", "화전", "화정", "회기", "회룡", "회현", "효자", "효창공원앞", "흑석", "흥선"};
    private double[] x_list = {37.748577d, 37.492522d, 37.481072d, 37.561391d, 37.484192d, 37.524649d, 37.517054d, 37.568491d, 37.448605d, 37.814536d, 37.464737d, 37.467048d, 37.634118d, 37.517268d, 37.497175d, 37.517186d, 37.270161d, 37.535804d, 37.530341d, 37.612314d, 37.535095d, 37.805723d, 37.498079d, 37.494594d, 37.489116d, 37.578608d, 37.572399d, 37.493105d, 37.540693d, 37.60185d, 37.594877d, 37.561405d, 37.569104d, 37.399907d, 37.75059d, 37.443885d, 37.575762d, 37.538157d, 37.737202d, 37.495918d, 37.543238d, 37.571462d, 37.555004d, 37.590508d, 37.50481d, 37.316777d, 37.24484d, 37.645676d, 37.750471d, 37.351315d, 37.544018d, 37.625742d, 37.563726d, 37.458366d, 37.433021d, 37.419232d, 37.30211d, 37.288617d, 37.545303d, 37.416182d, 37.479252d, 37.623632d, 37.571026d, 37.547456d, 37.493415d, 37.503039d, 37.485266d, 37.486839d, 37.603392d, 37.501364d, 37.611377d, 37.298969d, 37.537077d, 37.496756d, 37.636763d, 37.516169d, 37.399907d, 37.528105d, 37.557121d, 37.35356d, 37.832067d, 37.506997d, 37.545477d, 37.566379d, 37.637382d, 37.751322d, 37.372221d, 37.455626d, 37.766217d, 37.548034d, 37.275619d, 37.537801d, 37.603407d, 37.237247d, 37.818466d, 37.562434d, 37.531768d, 37.506207d, 37.47693d, 37.486056d, 37.448161d, 37.407722d, 37.485013d, 37.484596d, 37.541021d, 37.864007d, 37.463873d, 37.451535d, 37.487618d, 37.512887d, 37.514219d, 37.655128d, 37.600927d, 37.534675d, 37.75938d, 37.644799d, 37.511093d, 37.618808d, 37.44521d, 37.379681d, 37.566747d, 37.670272d, 37.53438d, 37.344285d, 37.631626d, 37.435675d, 37.49297d, 37.491373d, 37.513342d, 37.684071d, 37.328467d, 37.493514d, 37.494612d, 37.676087d, 37.547771d, 37.818486d, 37.586781d, 37.843188d, 37.490858d, 37.608806d, 37.514287d, 37.679563d, 37.689313d, 37.579622d, 37.468446d, 37.46607d, 37.574571d, 37.618456d, 37.466613d, 37.585212d, 37.610537d, 37.57142d, 37.565138d, 37.559052d, 37.927878d, 37.901885d, 37.397878d, 37.572627d, 37.269043d, 37.485312d, 37.471408d, 37.745271d, 37.475276d, 37.502971d, 37.337928d, 37.404737d, 36.833705d, 37.267051d, 37.527788d, 37.550632d, 37.576646d, 37.547184d, 37.53154d, 37.560183d, 37.567336d, 37.652206d, 37.66494d, 37.652782d, 37.5661d, 37.597566d, 37.49499d, 37.539574d, 37.563515d, 37.454911d, 37.59955d, 37.556094d, 37.709914d, 37.245795d, 37.265481d, 37.486947d, 37.252759d, 37.610637d, 37.588579d, 37.560989d, 37.55137d, 37.237964d, 37.384653d, 37.43213d, 37.45583d, 37.526065d, 37.517409d, 37.582299d, 37.517933d, 37.854619d, 37.485855d, 37.434935d, 37.350077d, 37.62667d, 37.613292d, 37.553703d, 37.312212d, 37.508178d, 37.727048d, 37.558598d, 37.481426d, 37.508857d, 37.667503d, 37.577446d, 36.777629d, 37.658239d, 37.643114d, 37.830779d, 37.483664d, 37.548013d, 37.389793d, 37.728755d, 37.64202d, 37.207503d, 37.499872d, 37.585286d, 37.913702d, 37.312752d, 37.258965d, 37.470047d, 36.801215d, 37.514219d, 37.482362d, 37.617283d, 37.488418d, 37.260192d, 37.48405d, 37.504631d, 37.50538d, 37.489493d, 37.508336d, 37.477679d, 37.498383d, 37.610469d, 37.580894d, 37.47653d, 37.65108d, 37.504206d, 37.358101d, 37.457122d, 37.242115d, 37.534777d, 37.409522d, 37.506411d, 37.508844d, 37.513011d, 37.653083d, 37.26181d, 37.660878d, 37.502834d, 37.505781d, 37.302795d, 37.596362d, 37.547716d, 37.564354d, 37.606377d, 37.556712d, 37.770246d, 37.297664d, 37.748885d, 37.591148d, 37.517274d, 37.551881d, 37.543742d, 37.565773d, 37.195504d, 37.506193d, 37.519594d, 37.554648d, 37.556328d, 37.481247d, 37.543617d, 37.056496d, 37.491897d, 37.385126d, 37.614805d, 37.506193d, 37.457611d, 37.435047d, 37.456805d, 37.505431d, 37.504503d, 37.451673d, 37.53802d, 37.51098d, 37.426684d, 37.300349d, 37.313335d, 37.544581d, 37.592624d, 36.916076d, 37.245025d, 37.187533d, 37.295309d, 37.393054d, 37.40095d, 37.482753d, 37.9481d, 37.4876d, 37.428514d, 37.737279d, 37.561184d, 37.075696d, 37.499703d, 37.378455d, 37.67785d, 37.349801d, 37.580842d, 37.487371d, 37.265974d, 37.261911d, 37.638052d, 37.322702d, 37.437428d, 37.54456d, 37.496029d, 37.460789d, 37.458335d, 37.564718d, 37.239151d, 37.286102d, 37.554548d, 37.517122d, 37.338212d, 37.612887d, 37.504598d, 37.57004d, 37.565972d, 37.487462d, 37.499701d, 37.508725d, 37.317185d, 37.484201d, 37.544277d, 37.503415d, 37.567532d, 37.516334d, 37.575297d, 37.41804d, 37.52917d, 37.525545d, 37.601854d, 37.524997d, 37.520074d, 37.503048d, 36.769502d, 37.555134d, 37.559783d, 37.46874d, 37.50008d, 37.440918d, 37.648627d, 36.793759d, 36.792053d, 37.5517d, 37.51382d, 37.551691d, 37.557345d, 37.576477d, 37.327082d, 37.586272d, 37.401592d, 37.55021d, 37.527072d, 37.527381d, 37.553736d, 37.712327d, 37.411185d, 37.55434d, 37.545981d, 37.606596d, 37.484147d, 37.470023d, 37.60533d, 37.774381d, 37.512398d, 37.568381d, 37.525648d, 37.492832d, 37.742802d, 37.548014d, 37.274917d, 37.507287d, 37.527098d, 37.521624d, 37.485178d, 37.500622d, 37.606021d, 37.417804d, 37.619001d, 37.546936d, 37.515504d, 37.52497d, 37.522669d, 37.511466d, 37.251568d, 37.449396d, 37.502162d, 37.494526d, 37.339824d, 37.524496d, 37.506062d, 37.145885d, 37.168953d, 37.362357d, 37.540685d, 37.492258d, 36.780483d, 37.516078d, 37.592928d, 37.59518d, 37.561533d, 37.596073d, 37.561904d, 37.574028d, 37.573647d, 37.48223d, 37.529849d, 37.548768d, 37.554669d, 37.237845d, 37.492904d, 37.440127d, 37.725826d, 37.653324d, 37.468672d, 37.412603d, 37.650658d, 37.633212d, 37.601948d, 37.391769d, 37.569532d, 37.796188d, 37.566295d, 37.566941d, 37.566014d, 37.549946d, 37.598605d, 37.320852d, 37.738415d, 37.739256d, 37.743676d, 37.556733d, 37.396104d, 37.265579d, 37.522272d, 37.534488d, 37.401553d, 37.476691d, 37.4897d, 37.447464d, 37.400614d, 37.448769d, 37.386007d, 37.457405d, 37.442383d, 37.448493d, 37.682077d, 37.483681d, 37.545059d, 37.530415d, 37.51395d, 37.520733d, 37.511687d, 37.512759d, 37.504898d, 37.700109d, 37.478703d, 37.56144d, 37.285342d, 37.659477d, 37.426513d, 37.351735d, 37.36706d, 37.578103d, 37.466769d, 37.570161d, 37.571607d, 37.570926d, 37.510997d, 37.464941d, 37.473703d, 37.670072d, 37.324753d, 37.644583d, 37.565923d, 37.486562d, 37.594917d, 37.315941d, 37.602545d, 37.557402d, 37.583876d, 37.269606d, 37.378384d, 37.0188d, 37.648048d, 37.892334d, 36.870593d, 37.109447d, 37.653166d, 37.579661d, 37.658978d, 36.810005d, 37.486637d, 37.538397d, 37.47605d, 37.447211d, 37.560245d, 37.519365d, 37.555878d, 37.580178d, 37.259489d, 37.735488d, 37.260752d, 37.374419d, 37.320646d, 37.486263d, 37.503663d, 37.885054d, 37.561243d, 37.559973d, 37.387855d, 37.694023d, 37.733579d, 37.617983d, 37.440019d, 37.382268d, 37.648311d, 37.815298d, 37.394761d, 37.547371d, 37.653225d, 37.394287d, 36.990726d, 37.672346d, 37.636352d, 37.514229d, 37.496663d, 37.539631d, 37.52943d, 37.309689d, 37.588458d, 37.555273d, 37.496237d, 37.549463d, 37.557322d, 37.612102d, 37.582336d, 37.401637d, 37.557192d, 37.589066d, 37.541513d, 37.620064d, 37.283862d, 37.602888d, 37.634592d, 37.58946d, 37.724846d, 37.558514d, 37.754025d, 37.539261d, 37.50877d, 37.743302d};
    private double[] y_list = {127.044213d, 127.118234d, 126.882343d, 126.854456d, 126.683673d, 126.675539d, 126.676672d, 126.915487d, 127.126697d, 127.510739d, 126.694181d, 126.707938d, 127.114757d, 126.721514d, 127.027926d, 127.04128d, 127.126033d, 127.132481d, 127.120508d, 126.843223d, 127.094681d, 127.634146d, 127.13482d, 126.85868d, 127.06614d, 126.798153d, 126.806171d, 127.14415d, 127.07023d, 126.657108d, 126.627178d, 126.677566d, 126.673728d, 127.25263d, 127.071495d, 127.007888d, 126.97353d, 126.722597d, 127.043257d, 127.12454d, 126.728128d, 126.735637d, 127.154151d, 127.036296d, 127.004943d, 126.823249d, 127.214251d, 126.801762d, 127.083715d, 127.34674d, 126.951592d, 127.072896d, 126.810678d, 126.476241d, 126.996568d, 126.908706d, 127.044483d, 127.051478d, 127.10357d, 126.884466d, 126.854876d, 127.061835d, 126.976669d, 126.931993d, 127.01408d, 126.881966d, 126.901401d, 127.058856d, 127.143869d, 126.987332d, 126.91727d, 127.105664d, 127.085916d, 126.870793d, 126.918821d, 127.399367d, 126.630347d, 126.917874d, 127.079542d, 126.948462d, 127.557695d, 126.73128d, 127.142853d, 126.742654d, 127.207853d, 126.765347d, 126.943429d, 126.89398d, 126.774644d, 127.015872d, 127.115936d, 127.140004d, 127.025053d, 127.198781d, 127.71434d, 126.801058d, 126.846683d, 126.810939d, 126.963693d, 126.887249d, 126.736939d, 126.695216d, 127.016189d, 126.971251d, 126.9713d, 127.723792d, 126.989134d, 127.159816d, 126.993513d, 126.953222d, 126.942454d, 127.061368d, 126.935756d, 126.986695d, 127.042292d, 127.051269d, 127.021415d, 126.820783d, 127.156866d, 126.745177d, 127.052704d, 127.079066d, 126.902281d, 126.948345d, 126.811024d, 127.006523d, 126.895801d, 127.07272d, 126.926382d, 127.379319d, 126.917332d, 127.079532d, 127.063642d, 126.747569d, 126.942069d, 127.056486d, 127.208832d, 127.061277d, 127.055381d, 127.161153d, 126.882768d, 127.045595d, 127.046222d, 127.222672d, 126.642706d, 126.668672d, 126.957748d, 126.933031d, 126.889249d, 126.675844d, 127.056431d, 127.009745d, 127.007896d, 127.005602d, 127.05479d, 127.056482d, 126.674005d, 127.016429d, 127.152716d, 126.718247d, 126.702896d, 127.056947d, 126.632802d, 126.979306d, 127.102976d, 126.681015d, 127.14896d, 127.21364d, 127.136248d, 126.865689d, 126.900984d, 127.047367d, 127.066704d, 126.825448d, 126.829497d, 126.77762d, 127.057675d, 127.311767d, 127.042973d, 126.666998d, 127.152781d, 126.945932d, 126.903343d, 126.732094d, 127.091909d, 126.910052d, 127.047455d, 127.057353d, 127.015678d, 127.046769d, 127.040566d, 127.077725d, 127.087503d, 126.986325d, 127.143999d, 127.190294d, 126.935433d, 127.129087d, 126.719298d, 126.864931d, 127.112359d, 126.950291d, 126.89476d, 126.788047d, 127.1225d, 126.698579d, 127.10891d, 127.025983d, 127.030053d, 126.745077d, 126.903524d, 127.011727d, 127.052803d, 126.837668d, 126.997596d, 127.126133d, 127.044273d, 126.812741d, 127.052991d, 126.794461d, 126.78787d, 127.58933d, 126.707704d, 127.007055d, 126.950806d, 127.04353d, 127.12684d, 127.032731d, 126.920428d, 127.019381d, 127.057277d, 127.108196d, 127.218457d, 127.126662d, 127.135763d, 127.060245d, 126.941892d, 127.091401d, 126.74109d, 127.490277d, 126.782686d, 126.763538d, 126.797337d, 126.724805d, 126.720548d, 126.710208d, 126.722244d, 126.929887d, 127.088478d, 126.981685d, 127.176933d, 127.015259d, 126.933274d, 127.149908d, 127.168075d, 126.97311d, 127.20336d, 126.742153d, 127.06316d, 127.053282d, 126.895558d, 127.108847d, 127.073572d, 126.94791d, 126.753083d, 126.866489d, 127.085032d, 126.922852d, 127.029354d, 127.048491d, 127.166417d, 127.454821d, 127.069342d, 127.06362d, 126.913629d, 126.928422d, 126.935711d, 126.676787d, 126.966641d, 127.051672d, 126.676203d, 126.988537d, 126.972559d, 126.969522d, 126.952739d, 127.044707d, 127.052819d, 127.007917d, 127.123592d, 127.065851d, 126.676203d, 126.692575d, 126.902295d, 126.709986d, 127.106979d, 127.049008d, 127.002303d, 126.893525d, 127.043593d, 126.698863d, 126.97075d, 127.0801d, 127.055961d, 127.016403d, 127.126964d, 127.013222d, 127.04318d, 127.570938d, 126.634729d, 126.733522d, 126.79544d, 127.061034d, 126.753664d, 126.657772d, 127.087159d, 126.811973d, 127.054301d, 127.112183d, 127.114322d, 127.055315d, 126.925365d, 126.895611d, 127.10188d, 126.999874d, 127.030736d, 127.025732d, 127.095026d, 127.140722d, 126.972106d, 126.953822d, 126.638297d, 126.681192d, 126.977108d, 127.178406d, 127.111313d, 127.020331d, 126.917169d, 126.765844d, 127.103218d, 127.02506d, 127.046481d, 127.01782d, 126.913149d, 126.928276d, 126.891295d, 127.40476d, 126.929715d, 126.88308d, 126.995925d, 126.816601d, 127.020114d, 127.025087d, 126.693863d, 126.967894d, 127.372921d, 127.067325d, 126.856191d, 126.852912d, 126.77596d, 126.951108d, 126.936893d, 126.942319d, 126.623853d, 126.90993d, 127.147564d, 127.034709d, 127.1214d, 127.104361d, 126.677122d, 127.443173d, 127.089761d, 126.956141d, 126.985443d, 126.788532d, 127.029005d, 126.922874d, 127.127562d, 127.028461d, 127.040534d, 126.95682d, 126.761356d, 127.128715d, 127.010655d, 127.329098d, 127.107906d, 127.034631d, 127.03842d, 127.19364d, 127.044708d, 126.865819d, 126.841333d, 126.885778d, 127.491814d, 127.085035d, 127.074658d, 127.143714d, 127.033868d, 126.932901d, 126.924191d, 126.811502d, 127.036456d, 126.922744d, 126.67894d, 126.921008d, 126.874916d, 126.907628d, 126.895951d, 126.905139d, 126.5237d, 127.071394d, 126.701012d, 127.128111d, 126.845365d, 127.108942d, 126.875181d, 127.473868d, 127.06672d, 127.063197d, 126.738714d, 127.017965d, 126.823388d, 127.003249d, 127.130848d, 126.673203d, 126.642696d, 127.037732d, 127.063549d, 127.050899d, 127.038091d, 127.086727d, 127.594647d, 126.964561d, 126.836318d, 127.310115d, 127.209198d, 126.49379d, 126.75997d, 126.767257d, 126.843041d, 127.547076d, 126.687389d, 126.872642d, 127.058831d, 127.041518d, 126.742699d, 126.899298d, 126.792587d, 126.99191d, 126.998079d, 126.982618d, 127.034538d, 126.915577d, 126.948217d, 127.045958d, 127.034781d, 127.049565d, 126.946013d, 127.12827d, 127.44226d, 126.974345d, 126.994302d, 126.976715d, 126.616936d, 126.675208d, 126.452508d, 126.722478d, 126.752618d, 126.639484d, 126.702221d, 126.699706d, 126.649619d, 126.769846d, 127.08439d, 126.738665d, 126.722527d, 127.102234d, 127.10379d, 127.086162d, 127.01122d, 126.93915d, 127.053196d, 127.126191d, 127.064623d, 127.219561d, 126.773359d, 126.98978d, 126.742989d, 127.108105d, 127.034893d, 126.656666d, 126.982923d, 126.991806d, 127.001849d, 127.073642d, 126.679923d, 126.68113d, 126.761334d, 127.107395d, 127.064303d, 127.08432d, 126.764843d, 127.076116d, 126.838573d, 127.079264d, 126.861939d, 126.909645d, 127.136515d, 126.645168d, 127.070444d, 126.913951d, 127.055716d, 127.143904d, 127.062278d, 127.047731d, 127.015241d, 127.285379d, 127.146826d, 126.838713d, 127.123572d, 126.867911d, 127.055664d, 127.013828d, 127.05335d, 126.625327d, 127.046835d, 127.078934d, 127.42661d, 127.159443d, 127.299d, 126.805913d, 126.981989d, 126.787036d, 127.717023d, 126.99428d, 126.963672d, 126.661673d, 126.761086d, 127.088704d, 127.07512d, 127.127709d, 126.656365d, 127.143952d, 126.792783d, 127.111217d, 127.243939d, 127.244493d, 126.963883d, 127.085159d, 126.786243d, 127.06799d, 127.031656d, 127.070594d, 127.001725d, 127.009169d, 126.85344d, 127.006221d, 127.043655d, 127.052873d, 126.913739d, 127.029476d, 126.834146d, 127.001844d, 126.708627d, 126.925381d, 126.943736d, 126.840461d, 127.084689d, 126.989627d, 126.868387d, 126.83265d, 127.057583d, 127.046895d, 126.978246d, 127.076902d, 126.961351d, 126.963708d, 127.037023d};

    public StationItem find_near_station(double x, double y) {
        StationItem station = new StationItem();
        int num = 0;
        double near_distance = 10.0d;
        int i = 0;
        while (true) {
            if (i < station_list.length) {
                double distance = Math.acos((Math.cos(Math.toRadians(90.0d - x)) * Math.cos(Math.toRadians(90.0d - this.x_list[i]))) + (Math.sin(Math.toRadians(90.0d - x)) * Math.sin(Math.toRadians(90.0d - this.x_list[i])) * Math.cos(Math.toRadians(y - this.y_list[i])))) * 6378.137d;
                if (near_distance > distance) {
                    near_distance = distance;
                    num = i;
                }
                i++;
            } else {
                station.setName(station_list[num]);
                station.setX(x_list[num]);
                station.setY(y_list[num]);
                station.setDistance((int) (1000.0d * near_distance));
                return station;
            }
        }
    }

    public StationItem get_next_station(String station_name, double x, double y){
        StationItem stationItem = new StationItem();
        int num;
        for(num=0;num<station_list.length;num++){
            if(station_list[num].equals(station_name)){
                double distance = Math.acos((Math.cos(Math.toRadians(90.0d - x)) * Math.cos(Math.toRadians(90.0d - x_list[num]))) + (Math.sin(Math.toRadians(90.0d - x)) * Math.sin(Math.toRadians(90.0d - x_list[num])) * Math.cos(Math.toRadians(y - y_list[num])))) * 6378.137d;

                stationItem.setName(station_list[num]);
                stationItem.setX(x_list[num]);
                stationItem.setY(y_list[num]);
                stationItem.setDistance((int) (1000.0d * distance));
                break;
            }
        }
        return stationItem;
    }

    public double get_x(String station){
        for(int i=0; i<station_list.length;i++){
            if(station_list[i].equals(station)){
                return x_list[i];
            }
        }
        return 0;
    }

    public double get_y(String station){
        for(int i=0; i<station_list.length;i++){
            if(station_list[i].equals(station)){
                return y_list[i];
            }
        }
        return 0;
    }
}